<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>passenger on Dead Programmer SOciety</title>
    <link>/tags/passenger/</link>
    <description>Recent content in passenger on Dead Programmer SOciety</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Feb 2009 09:37:00 -0800</lastBuildDate><atom:link href="/tags/passenger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JSON-P Makes Progress Cross Domains With Apache, Passenger, and jQuery</title>
      <link>/2009/02/json-p-makes-progress-cross-domains.html</link>
      <pubDate>Tue, 10 Feb 2009 09:37:00 -0800</pubDate>
      
      <guid>/2009/02/json-p-makes-progress-cross-domains.html</guid>
      <description>As yet another part of the be-all, end-all media upload processing solution, my client wanted to provide a nice progress bar for tracking the status of file uploads. Let me note, that providing user feedback as to the state of an extended upload turns out to be a very important UI feature.
Luckily, the problem of a nice way to track file upload progress had already been solved several times. My own platform of choice at the moment is Apache running with Passenger, and cool dude Peter Sarnacki aka drogomir had kindly provided a handy version of the same JSON based file upload progress tracking that had been done so well on nginx, except this time for Apache in the form of apache-upload-progress-module.</description>
    </item>
    
    <item>
      <title>Getting Async With Sinatra And Passenger Using spork</title>
      <link>/2009/01/getting-async-with-sinatra-and.html</link>
      <pubDate>Wed, 28 Jan 2009 10:31:00 -0800</pubDate>
      
      <guid>/2009/01/getting-async-with-sinatra-and.html</guid>
      <description>Everyone wants it all. In the case of upload processing, this means we want both the convenience of Sinatra coding, plus the performance that a nice process/threading model gives us. Go off and do some work I just assigned you, and don&amp;rsquo;t make me wait around to see you do it.
If you are using Passenger, it already is buffering your uploads, and not calling your Sinatra application until the upload is complete.</description>
    </item>
    
    <item>
      <title>Sinatra and Passenger Back On The Rack</title>
      <link>/2009/01/sinatra-and-passenger-back-on-rack.html</link>
      <pubDate>Wed, 21 Jan 2009 08:16:00 -0800</pubDate>
      
      <guid>/2009/01/sinatra-and-passenger-back-on-rack.html</guid>
      <description>There is a new release of the Sinatra gem, version 0.9.1. This happens to work out well, since the newest Passenger 2.0.6 has a strong dependency on Rack 0.9, and the previous Sinatra 0.3 simply did not work at all due to dependency on Rack 0.4. The last few days have had some of us apoplectic over Ruby gem version hell.
And lots of interesting and even important things require all three.</description>
    </item>
    
  </channel>
</rss>

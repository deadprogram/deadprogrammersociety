<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming languages on Dead Programmer SOciety</title>
    <link>/tags/programming-languages/</link>
    <description>Recent content in programming languages on Dead Programmer SOciety</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 May 2008 21:05:00 -0700</lastBuildDate><atom:link href="/tags/programming-languages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ain&#39;t No Stopping Us Now</title>
      <link>/2008/05/aint-no-stopping-us-now.html</link>
      <pubDate>Tue, 13 May 2008 21:05:00 -0700</pubDate>
      
      <guid>/2008/05/aint-no-stopping-us-now.html</guid>
      <description>According to a recent eWeek article, there will be four times more Ruby programmers within five years. Before all the haters start making cracks about it going from one thousand to four thousand professional Rubyists, here is a juicy bit from Mark Driver, Gartner analyst:
 &amp;ldquo;There are under one million professional Ruby developers now and we&amp;rsquo;re projecting there will be four million plus by 2013.&amp;rdquo;
 And oh yeah, what about that whole &amp;ldquo;Ruby is for hobbyists&amp;rdquo; misinformation campaign?</description>
    </item>
    
    <item>
      <title>I Want My API</title>
      <link>/2008/01/i-want-my-api.html</link>
      <pubDate>Mon, 28 Jan 2008 22:47:00 -0800</pubDate>
      
      <guid>/2008/01/i-want-my-api.html</guid>
      <description>I just ran into a really great resource for open source API documentation. Called gotAPI, it links in a delightfully searchable way all of the APIs we love, but turn out to not actually know. Well, we know them, just not well enough to have their numbers setup for speed dial on our cell phones. Or our code able to call them directly without looking up a reference first.
Here is a small sample of ones I will actually use regularly:</description>
    </item>
    
    <item>
      <title>RubyConf 2007 - Day 2 - &#34;The Ruby VM Smackdown Begins&#34;</title>
      <link>/2007/11/rubyconf-2007-day-2-ruby-vm-smackdown.html</link>
      <pubDate>Tue, 06 Nov 2007 13:38:00 -0800</pubDate>
      
      <guid>/2007/11/rubyconf-2007-day-2-ruby-vm-smackdown.html</guid>
      <description>As the sun rose over the hills of North Carolina, the quiet betrayed a seething fire blazing in the hearts of three development teams. &amp;ldquo;Three teams enter, one team leaves!&amp;rdquo; Yes, I am talking about the main event, people, the one, the only, Ruby VM Smackdown! The room was jam packed, the anticipation was high.
As good fortune would have it, I was sitting right next to the head of the team who was my personal favorite to win the day.</description>
    </item>
    
    <item>
      <title>RubyConf 2007 - Day 1 - &#34;What Makes Code Beautiful&#34; - Marcel Molina</title>
      <link>/2007/11/rubyconf-2007-day-1-what-makes-code.html</link>
      <pubDate>Mon, 05 Nov 2007 00:19:00 -0800</pubDate>
      
      <guid>/2007/11/rubyconf-2007-day-1-what-makes-code.html</guid>
      <description>I remember Marcel Molina from the first RailsConf, when the Rails core team was introduced to the audience. What had impressed me at the time, besides his cool glasses, was the fact that Marcel comes from a literature background.
That makes his take on programming in Ruby very interesting, because he approaches it from an aesthetic perspective, not just a functional one. To Marcel, code must achieve both, for it to be considered beautiful.</description>
    </item>
    
    <item>
      <title>Programming Language Family Tree</title>
      <link>/2007/01/programming-language-family-tree.html</link>
      <pubDate>Wed, 31 Jan 2007 10:03:00 -0800</pubDate>
      
      <guid>/2007/01/programming-language-family-tree.html</guid>
      <description>My colleague Michael Hocter just sent me a great link to a diagram showing the history of the evolutions of the major programming languages. I just love this kind of visual representation of information!
Note how C# has taken ideas from Java&amp;hellip;then Java goes and draws inspiration from C#. Also note how C# 2.0 takes its inspiration from Ruby. The two programming languages that drew from the most other languages (five) were Oak, which turned into Java, and Ruby.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sinatra on Dead Programmer SOciety</title>
    <link>/tags/sinatra/</link>
    <description>Recent content in sinatra on Dead Programmer SOciety</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Apr 2009 11:23:00 -0700</lastBuildDate><atom:link href="/tags/sinatra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Heroku, Why Haven&#39;t I Been Using You Till Now?</title>
      <link>/2009/04/heroku-why-havent-i-been-using-you-till.html</link>
      <pubDate>Tue, 14 Apr 2009 11:23:00 -0700</pubDate>
      
      <guid>/2009/04/heroku-why-havent-i-been-using-you-till.html</guid>
      <description>Last night, I finally got around to deploying something on Heroku, an interesting service founded by my formerly LA-based Ruby programming chums Adam Wiggins, James Lindenbaum, and Orion Henry. I had played with their previous incarnation of the service, now known as &amp;ldquo;Heroku Garden&amp;rdquo; but only recently have I gotten to know a little bit more about the incredible offering they have evolved into.
Basically, the Heroku crew have addressed the question &amp;ldquo;how can I deploy my Ruby on Rails, Sinatra, or other Rack-based web application into a dynamic cloud of servers with ridiculous ease?</description>
    </item>
    
    <item>
      <title>LARubyConf 2009 - Blake Mizerany - &#34;Sinatra: the Ultimate Rack Citizen&#34;</title>
      <link>/2009/04/larubyconf-2009-blake-mizerany-sinatra.html</link>
      <pubDate>Tue, 07 Apr 2009 12:19:00 -0700</pubDate>
      
      <guid>/2009/04/larubyconf-2009-blake-mizerany-sinatra.html</guid>
      <description>I was very happy when the next presenter at the Los Angeles Ruby Conference 2009 (LARubyConf) was Blake Mizerany, creator of the very cool Ruby micro-framework Sinatra. As long-time readers of this blog know, I am very into Sinatra.
There has been an incredible amount of work going into Sinatra lately, so I was very interested to catch up on what the team has been up to.
What is Sinatra? A Ruby Domain Specific Language (DSL) Mapping REST to simple actions</description>
    </item>
    
    <item>
      <title>Getting Async With Sinatra And Passenger Using spork</title>
      <link>/2009/01/getting-async-with-sinatra-and.html</link>
      <pubDate>Wed, 28 Jan 2009 10:31:00 -0800</pubDate>
      
      <guid>/2009/01/getting-async-with-sinatra-and.html</guid>
      <description>Everyone wants it all. In the case of upload processing, this means we want both the convenience of Sinatra coding, plus the performance that a nice process/threading model gives us. Go off and do some work I just assigned you, and don&amp;rsquo;t make me wait around to see you do it.
If you are using Passenger, it already is buffering your uploads, and not calling your Sinatra application until the upload is complete.</description>
    </item>
    
    <item>
      <title>Sinatra and Passenger Back On The Rack</title>
      <link>/2009/01/sinatra-and-passenger-back-on-rack.html</link>
      <pubDate>Wed, 21 Jan 2009 08:16:00 -0800</pubDate>
      
      <guid>/2009/01/sinatra-and-passenger-back-on-rack.html</guid>
      <description>There is a new release of the Sinatra gem, version 0.9.1. This happens to work out well, since the newest Passenger 2.0.6 has a strong dependency on Rack 0.9, and the previous Sinatra 0.3 simply did not work at all due to dependency on Rack 0.4. The last few days have had some of us apoplectic over Ruby gem version hell.
And lots of interesting and even important things require all three.</description>
    </item>
    
    <item>
      <title>April Is For AOL</title>
      <link>/2008/04/april-is-for-aol.html</link>
      <pubDate>Wed, 23 Apr 2008 08:38:00 -0700</pubDate>
      
      <guid>/2008/04/april-is-for-aol.html</guid>
      <description>Last night was the always fun Los Angeles web application developer Meetup, this time at AOL in Beverly Hills. After navigating a veritable maze of cubes, we found ourselves in a fairly large screening room chock full of AV equipment, accompanied by a large pile of pizza boxes. A few moments later, the throng of LA-based developers shuffled in, ready for the latest and greatest. The prerequisites fulfilled, we got down to some serious techno-babble.</description>
    </item>
    
    <item>
      <title>Frankie Goes To Facebook</title>
      <link>/2008/04/frankie-goes-to-facebook.html</link>
      <pubDate>Tue, 08 Apr 2008 22:04:00 -0700</pubDate>
      
      <guid>/2008/04/frankie-goes-to-facebook.html</guid>
      <description>UPDATED 4/12/2008: Now compatible with Sinatra 0.2.0
So you want to create a small Facebook application&amp;hellip; seems like it should be a small thing, right? But creating an entire Ruby on Rails application just for a tiny little Facebook application is, at the very least, a bit wasteful. In the case of a overly popular Facebook app you could end up with, as Marc Andreessen put it, a &amp;ldquo;self-inflicted denial of service attack&amp;rdquo;, unless you have both a pretty serious infrastructure to support it, as well as lots of cash to keep that data center running.</description>
    </item>
    
    <item>
      <title>Everybody Into The Pool</title>
      <link>/2008/02/everybody-into-pool.html</link>
      <pubDate>Wed, 20 Feb 2008 11:18:00 -0800</pubDate>
      
      <guid>/2008/02/everybody-into-pool.html</guid>
      <description>A few weeks back, I indulged my current obsession with grid computing, and Amazon&amp;rsquo;s EC2 and S3 services in particular, with a lengthy post. I mentioned how friend Ari Lerner and I had built a really neat solution, and were going to put all of our processing farm goodness into a nice neat gemified package. Well, mostly thanks to Ari, we now have a new Ruby gem called ProcessorPool that uses EC2 and S3 to do all the hard work for you.</description>
    </item>
    
    <item>
      <title>On The Grid With EC2</title>
      <link>/2008/01/on-grid-with-ec2.html</link>
      <pubDate>Sat, 12 Jan 2008 10:08:00 -0800</pubDate>
      
      <guid>/2008/01/on-grid-with-ec2.html</guid>
      <description>Lately, I have had a chance to get seriously into Amazon&amp;rsquo;s Elastic Compute Cloud (EC2) service. I doubt any reader of this blog is unfamiliar with the existence of EC2, but many of you have probably not even gotten to the tire kicking stage, like I had been until recently.
Even after attending several sessions about Amazon&amp;rsquo;s EC2 at RailsConf 2007, I still had only a very general idea about the service.</description>
    </item>
    
    <item>
      <title>Sinatra, a Ruby web framework, and Why It Matters</title>
      <link>/2007/10/sinatra-ruby-web-framework-and-why-it.html</link>
      <pubDate>Wed, 24 Oct 2007 09:16:00 -0700</pubDate>
      
      <guid>/2007/10/sinatra-ruby-web-framework-and-why-it.html</guid>
      <description>As followers of this blog know, I am very interested in the Ruby language itself, not just web development. But it is undeniable that Ruby has become popular largely due to web development powered by Ruby on Rails. However amazing Rails is, however, it is not the final web framework to be developed in Ruby.
When Ari Lerner first told me of the Sinatra project, I was interested to see where he was going with it.</description>
    </item>
    
    <item>
      <title>More Developer Fun In Los Angeles</title>
      <link>/2007/10/more-developer-fun-in-los-angeles.html</link>
      <pubDate>Wed, 24 Oct 2007 08:17:00 -0700</pubDate>
      
      <guid>/2007/10/more-developer-fun-in-los-angeles.html</guid>
      <description>Last night was the always entertaining Los Angeles Application Developer Meetup. L.A. is not known for the same massive quantity of developers as the bay area, for example, but having joined forces with the LA Ruby on Rails Meetup crew some time back, the monthly event is still growing.
This month&amp;rsquo;s was held at the impressive new digs of YellowPages.com, who have been busy building out a huge Ruby on Rails based local search replacement for their venerable 100K+ lines of Java code.</description>
    </item>
    
  </channel>
</rss>

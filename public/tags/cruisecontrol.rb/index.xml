<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cruisecontrol.rb on Dead Programmer SOciety</title>
    <link>/tags/cruisecontrol.rb/</link>
    <description>Recent content in cruisecontrol.rb on Dead Programmer SOciety</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Oct 2007 08:17:00 -0700</lastBuildDate><atom:link href="/tags/cruisecontrol.rb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>More Developer Fun In Los Angeles</title>
      <link>/2007/10/more-developer-fun-in-los-angeles.html</link>
      <pubDate>Wed, 24 Oct 2007 08:17:00 -0700</pubDate>
      
      <guid>/2007/10/more-developer-fun-in-los-angeles.html</guid>
      <description>Last night was the always entertaining Los Angeles Application Developer Meetup. L.A. is not known for the same massive quantity of developers as the bay area, for example, but having joined forces with the LA Ruby on Rails Meetup crew some time back, the monthly event is still growing.
This month&amp;rsquo;s was held at the impressive new digs of YellowPages.com, who have been busy building out a huge Ruby on Rails based local search replacement for their venerable 100K+ lines of Java code.</description>
    </item>
    
    <item>
      <title>CruiseControl.rb and RCov Are SO Good Together</title>
      <link>/2007/06/cruisecontrolrb-and-rcov-are-so-good.html</link>
      <pubDate>Sun, 24 Jun 2007 09:00:00 -0700</pubDate>
      
      <guid>/2007/06/cruisecontrolrb-and-rcov-are-so-good.html</guid>
      <description>I spent a bit of time this morning getting CruiseControl.rb and RCov working together for a new client&amp;rsquo;s fairly LARGE Ruby on Rails (70+ models, 40+ controllers) project. If you are not familiar with CruiseControl.rb, it is the Ruby based continuous integration tool from ThoughtWorks. RCov, on the other hand, is a very well known code coverage tool for Ruby. The implementation was incredibly simple, but finding the information on how to get the two working together required a perusal of the CruiseControl.</description>
    </item>
    
    <item>
      <title>CruiseControl.rb: Continuous Integration Is About To Get Beautiful</title>
      <link>/2007/03/cruisecontrolrb-continuous-integration.html</link>
      <pubDate>Tue, 13 Mar 2007 14:09:00 -0700</pubDate>
      
      <guid>/2007/03/cruisecontrolrb-continuous-integration.html</guid>
      <description>At last, Ruby has a real Continuous Integration system, not just some crazy hacked-together solution. Nothing against crazy, hacked-together solutions, but your CI system is not the place for such madness. From those wonderful folks at Thoughtworks, we now have CruiseControl.rb, to join the CruiseControl and CruiseControl.NET offerings for Java and .NET projects respectively.
I have been a constant user of CruiseControl.NET for all of the MS-platform projects for the last couple of years, and having a powerful, flexible system has been great.</description>
    </item>
    
  </channel>
</rss>
